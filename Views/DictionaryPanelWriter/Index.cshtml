@model EntityLayer.Concrete.Writer
@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_DictionaryLayout.cshtml";
}

<style>
    @@import url('https://fonts.googleapis.com/css2?family=Kanit&display=swap');

    .customtext {
        font-family: 'Kanit', sans-serif;
        font-size: 55px;
        background: linear-gradient(to left, #572ADE 0%, #12A77F 100%);
        -webkit-background-clip: text;
        -webkit-text-fill-color: transparent;
        margin-bottom: 20px;
    }

    .center-div .customtext2 {
        font-family: 'Kanit', sans-serif;
        font-size: 20px;
        background: linear-gradient(to left, #572ADE 0%, #12A77F 100%);
        -webkit-background-clip: text;
        -webkit-text-fill-color: transparent;
        margin-bottom: 10px;
    }

    .customtext2 {
        font-family: 'Kanit', sans-serif;
        font-size: 30px;
        background: linear-gradient(to left, #572ADE 0%, #12A77F 100%);
        -webkit-background-clip: text;
        -webkit-text-fill-color: transparent;
        margin-bottom: 10px;
    }

    .entry-link {
        display: none;
    }

    .custom-img {
        max-width: 250px;
        max-height: 130px;
    }

    p {
        /* font-family: 'Kanit', sans-serif;*/
        font-size: 18px;
    }

    .card {
        font-family: 'Kanit', sans-serif;
        background-color: #181A1F;
        color: #9FA0A2;
        margin-block: 20px;
        box-shadow: none;
        display: flex;
        justify-content: center;
        align-items: center;
        width: 100%;
        height: 670px;
    }

    lottie-player {
        max-width: 60px;
        max-height: 60px;
        margin-bottom: 10px;
    }

    .second-card {
        background-color: #1d1f24;
        color: #9FA0A2;
        margin: 20px;
        border-radius: 30px;
        padding: 20px;
        width: 100%;
        height: 100%;
    }

    .mail-container {
        padding-inline: 50px;
    }

    @@media (max-width: 1079.98px) {
        .mail-container {
            padding-inline: 0px;
        }

        .second-card {
            margin: 10px;
        }
    }

    @@media (max-width: 479.98px) {

        .customtext {
            font-size: 35px;
        }

        .customtext2 {
            font-size: 20px;
        }

        p {
            font-size: 16px;
        }
    }

    .form-control.form-control-sm {
        color: #9FA0A2;
        border: 2px solid #0000;
        border-radius: 6px;
        background: linear-gradient(#1d1f24,#1d1f24) padding-box, linear-gradient(to left,#572ADE,#12A77F) border-box;
        margin-right: 16px;
    }

        .form-control.form-control-sm:hover {
            background: linear-gradient(#181A1F,#181A1F) padding-box, linear-gradient(to left,#12A77F,#12A77F) border-box;
        }

    .copy-button {
        display: block;
        width: var(--sizee);
        height: var(--sizee);
        cursor: pointer;
        border-radius: 999px;
        overflow: visible;
        -webkit-tap-highlight-color: rgba(0, 0, 0, 0);
        -webkit-tap-highlight-color: transparent;
        background: #1d1f24;
        border: 1px solid #0000;
    }

    /* like css */
    :root {
        --sizee: 60px;
        --framess: 62;
    }

    .like {
        display: block;
        width: var(--sizee);
        height: var(--sizee);
        cursor: default;
        border-radius: 999px;
        overflow: visible;
        -webkit-tap-highlight-color: rgba(0, 0, 0, 0);
        -webkit-tap-highlight-color: transparent;
    }

    .like-container {
        position: relative;
        display: flex;
        justify-content: center;
    }

    #likeList {
        position: absolute;
        top: -8px;
        z-index: 999;
    }

    .hearth {
        background-image: url('https://assets.codepen.io/23500/Hashflag-AppleEvent.svg');
        background-size: calc(var(--sizee) * var(--framess)) var(--sizee);
        background-repeat: no-repeat;
        background-position-x: calc(var(--sizee) * (var(--framess) * -1 + 2));
        background-position-y: calc(var(--sizee) * 0.02);
        width: var(--sizee);
        height: var(--sizee);
        display: flex;
        justify-content: center;
    }

    input:checked + .hearth {
        animation: like 1s steps(calc(var(--framess) - 3));
        animation-fill-mode: forwards;
    }

    @@keyframes like {
        0% {
            background-position-x: 0;
        }

        100% {
            background-position-x: calc(var(--sizee) * (var(--framess) * -1 + 3));
        }
    }

    @@media (hover: hover) {
        .like:hover {
            background-color: #e1255e15;
        }

            .like:hover .hearth {
                background-position-x: calc(var(--sizee) * (var(--framess) * -1 + 1));
            }

        .copy-button:hover {
            background: linear-gradient(to left,#572ADE,#12A77F) padding-box, linear-gradient(to left,#572ADE,#12A77F) border-box;
        }

        .like-count:hover {
            color: #DC235D;
        }
    }
    /* --like css-- */

    .modal-content {
        width: 400px;
        font-family: 'Kanit', sans-serif;
        background-color: #181A1F;
        color: #9FA0A2;
        border-radius: 30px;
    }

    .modal-header {
        background-color: #181A1F;
        color: #9FA0A2;
        border: none;
    }

    .modal-body {
        background-color: #181A1F;
        color: #9FA0A2;
        border: none;
    }

    .add-content-card {
        background-color: #1d1f24;
        color: #9FA0A2;
        margin: 30px;
        border-radius: 30px;
    }

    @@media (max-width: 479.98px) {
        .add-content-card {
            margin: 10px;
        }

        .modal-content {
            width: 360px;
        }
    }
</style>

<div class="content-header">
    <div class="container-fluid">
        <div class="row mb-0">
            <div class="col-sm-6">
                <ol class="breadcrumb float-sm-left">
                    <li style="margin-top:5px"><i style="font-size:25px;" class="fas fa-user-astronaut"></i></li>
                    <li style="margin-left:10px"><h1 class="m-0"> Writer Profile</h1></li>
                </ol>
            </div>
            <div class="col-sm-6">
                <ol class="breadcrumb float-sm-right">
                    <li class="breadcrumb-item active">WebDictionary v1</li>
                </ol>
            </div><!-- /.col -->
        </div><!-- /.row -->
    </div><!-- /.container-fluid -->
</div>

<div class="row scrollbar" id="style-7" style="background-color: #181A1F; color: #9FA0A2; height: 80vh; border-radius: 40px; overflow-y: auto; overflow-x: hidden;">
    <section class="col-lg-6">
        <!-- Custom tabs (Charts with tabs)-->
        <div class="card">
            <div class="card-body" style="height: 100%; width: 100%; max-height: 100%; text-align:center; ">
                <div class="second-card">
                    @if (Model.WriterImage != null)
                    {
                        <a href="@Url.Action("GetImageWriter", "DictionaryPanel", new { id = Model.WriterID })" target="_blank">
                            <img src="@Url.Action("GetImageWriter", "DictionaryPanel", new { id =Model.WriterID })" alt="" style=" border-radius: 12px; margin-block: 10px;" class="custom-img">
                        </a>
                    }
                    @if (Model.WriterImage == null)
                    {
                        <img src="~/Resources/defaultperson.png" alt="" style=" border-radius: 12px; margin-block: 10px;" class="custom-img">
                    }
                    <div style="margin:0" class="customtext"> @Model.WriterName @Model.WriterSurname</div>
                    <p>
                        @Model.WriterTitle
                    </p>

                    <div class="row mail-container" style="margin-block:20px;">
                        <div class="col-md-2" style="width:17%;padding:0;">
                            <div style="display: grid; place-items: center; height: 100%; max-width: 100%;margin-top:6px;">
                                <lottie-player src="https://assets6.lottiefiles.com/packages/lf20_bY2t5bLFsf.json"
                                               background="transparent" style=" max-width: 45px; max-height: 45px;" speed="1" loop autoplay></lottie-player>
                            </div>
                        </div>
                        <div class="col-md-8" style="width:66%;padding:0;">
                            <div style="display: grid; place-items: center;text-align:left; height: 100%; max-width: 100%;">
                                <p style="margin: 0; top: 10px; color: #d0d2d6">
                                    @Model.WriterMail
                                    @*<a style="font-weight: 600; background: linear-gradient(to left, #e37515 0%, #be1145 100%); -webkit-background-clip: text; -webkit-text-fill-color: transparent; "> @Model.WriterMail</a>*@
                                </p>

                            </div>
                        </div>
                        <div class="col-md-2" style="width:17%;padding:0;">
                            @if (Model.WriterRemove == true)
                            {
                                <div style="display: grid; place-items: center;text-align:left; height: 100%; max-width: 100%; ">
                                    <span class="badge bg-danger">Not active</span>
                                </div>
                            }
                            @if (Model.WriterRemove == false)
                            {
                                if (User.Identity.IsAuthenticated)
                                {
                                    if (User.Identity.Name != Model.WriterMail)
                                    {
                                        <div style="display: grid; place-items: center;text-align:left; height: 100%; max-width: 100%; ">
                                            <a href="/DictionaryPanelMessage/Index/@Model.WriterID" class="btn btn-dark custom-button copy-button" data-toggle="tooltip" title="Send message" style="width:40px;height:40px;padding:0;">
                                                <i style="margin-top:11px;" class="fas fa-feather"></i>
                                            </a>
                                        </div>
                                    }
                                }
                                else
                                {
                                    <div style="display: grid; place-items: center;text-align:left; height: 100%; max-width: 100%; ">
                                        <a href="#" class="btn btn-dark custom-button copy-button" data-html="true" data-toggle="tooltip" title="<b>Sign up</b> now and start sending message" style="width:40px;height:40px;padding:0;">
                                            <i style="margin-top:11px;" class="fas fa-feather"></i>
                                        </a>
                                    </div>
                                }
                            }
                        </div>
                    </div>
                    <p style="font-size: 16px;">
                        <div style="margin:0;font-size:20px;display:stretch;">
                            <a style="font-weight:600; background: linear-gradient(to left, #572ADE 0%, #12A77F 100%); -webkit-background-clip: text; -webkit-text-fill-color: transparent;">
                                About
                            </a>
                        </div>
                        <a style="color: #d0d2d6">
                            @Model.WriterAbout
                        </a>
                    </p>
                    <div class="row">
                        <div class="col-md-3" style="width:25%;">
                            <div data-toggle="tooltip" title="Number of headings created" style="display: grid; place-items: center; height: 100%; max-width: 100%;margin-inline:15px;">
                                <lottie-player src="https://assets7.lottiefiles.com/packages/lf20_4YqN18EePR.json"
                                               background="transparent" speed="1" loop autoplay></lottie-player>
                                <div style="margin:0" class="customtext2">@ViewBag.headingCount</div>
                            </div>
                        </div>
                        <div class="col-md-3" style="width:25%;">
                            <div data-toggle="tooltip" title="Number of contents created" style="display: grid; place-items: center; height: 100%; max-width: 100%; margin-inline: 15px;">
                                <lottie-player src="https://assets9.lottiefiles.com/packages/lf20_AEcHnHmLpC.json"
                                               background="transparent" speed="1" loop autoplay></lottie-player>
                                <div style="margin:0" class="customtext2">@ViewBag.contentCount</div>
                            </div>
                        </div>
                        <div class="col-md-3" style="width:25%;">
                            <div data-toggle="tooltip" title="Number of categories writer is interested in" style="display: grid; place-items: center; height: 100%; max-width: 100%; margin-inline: 15px;">
                                <lottie-player src="https://assets7.lottiefiles.com/packages/lf20_673mpwgl.json"
                                               background="transparent" speed="1" loop autoplay></lottie-player>
                                <div style="margin:0" class="customtext2">@ViewBag.categoryCount</div>
                            </div>
                        </div>
                        <div class="col-md-3" style="width:25%;">
                            <div data-toggle="tooltip" title="Number of likes writer has received" style="display: grid; place-items: center; height: 100%; max-width: 100%; margin-inline: 15px;">
                                <lottie-player src="https://lottie.host/0b0587be-843a-44a3-b277-8ae891da514e/vCRbAYFd1H.json"
                                               background="transparent" speed="1" loop autoplay></lottie-player>
                                <div style="margin:0" class="customtext2">@ViewBag.likeCount</div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </section>
    <section class="col-lg-6">
        <div class="card">
            <div class="card-body" style="height: 100%; width: 100%; max-height: 100%;">

                <ul class="nav nav-tabs" id="custom-content-below-tab" role="tablist">
                    <li class="nav-item">
                        <a class="nav-link active" id="custom-content-below-heading-tab" data-toggle="pill" href="#custom-content-below-heading" role="tab" aria-controls="custom-content-below-heading" aria-selected="false"><i class="fas fa-tag"></i> Heading</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" id="custom-content-below-contents-tab" data-toggle="pill" href="#custom-content-below-contents" role="tab" aria-controls="custom-content-below-contents" aria-selected="false"><i class="fas fa-paint-brush"></i> Content</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" id="custom-content-below-category-tab" data-toggle="pill" href="#custom-content-below-category" role="tab" aria-controls="custom-content-below-category" aria-selected="false"><i class="fas fa-layer-group"></i> Category</a>
                    </li>
                </ul>
                <div class="tab-content" id="custom-content-below-tabContent">
                    <div class="tab-pane fade show active" id="custom-content-below-heading" role="tabpanel" aria-labelledby="custom-content-below-heading-tab">
                        @Html.Action("writerHeadingsPartial", "DictionaryPanelHeading", new { id = Model.WriterID })
                    </div>
                    <div class="tab-pane fade" id="custom-content-below-contents" role="tabpanel" aria-labelledby="custom-content-below-contents-tab">
                        @Html.Action("writerContentsPartial", "DictionaryPanelContent", new { id = Model.WriterID })
                    </div>
                    <div class="tab-pane fade" id="custom-content-below-category" role="tabpanel" aria-labelledby="custom-content-below-category-tab">
                        @Html.Action("writerCategoriesPartial", "DictionaryPanelWriter", new { id = Model.WriterID })
                    </div>
                </div>

            </div>
        </div>
    </section>
</div>

<button type="button" style="display:none" data-toggle="modal" data-target=".modal" id="btn_modallike" name="btn_modallike">
</button>

<div class="modal fade scrollbar" id="style-7" style="overflow-y: auto; overflow-x: hidden;" tabindex="-1" role="dialog" aria-labelledby="likesModalLabel">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="likesModalLabel">Likes</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span style="color: #9FA0A2;" aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">

            </div>
        </div>
    </div>
</div>


@section scripts{
    <script>
        $(document).ready(function () {
            $(document).on('click', '#likeList', function () {
                var id = $(this).data('id');
                var url = '@Url.Action("GetLikes", "DictionaryPanelContent")' + '/' + id;

                $.ajax({
                    type: 'GET',
                    url: url,
                    success: function (result) {
                        $('.modal .modal-body').html(result);
                        $("#btn_modallike").click();
                    },
                    error: function (xhr, status, error) {
                        Swal.fire({
                            title: status + '!',
                            text: 'An error occurred, like list could not be show.' + error,
                            icon: 'error'
                        });
                    }
                });
            });
        });
    </script>
    <script>
        $(document).ready(function () {
            $('.modal').on('hidden.bs.modal', function () {
                $(this).removeData('bs.modal');
            });
        });

        function showModal() {
            $('.modal').modal('show');
        }
    </script>

    <script>
        $(document).ready(function () {
            var likeCheckboxs = document.querySelectorAll("#likeCheckbox");

            const Toast = Swal.mixin({
                toast: true,
                position: 'top-end',
                showConfirmButton: false,
                timer: 3000,
                timerProgressBar: true,
                didOpen: (toast) => {
                    toast.addEventListener('mouseenter', Swal.stopTimer)
                    toast.addEventListener('mouseleave', Swal.resumeTimer)
                }
            })

            likeCheckboxs.forEach(function (checkbox) {

                checkbox.addEventListener("change", function () {

                    var changedCheckbox = event.target;
                    var id = changedCheckbox.getAttribute("data-id");

                    var likeCountElement = this.closest(".like-container").querySelector(".like-count");
                    var likeCountValue = parseInt(likeCountElement.textContent);

                    if (checkbox.checked) {
                        var url = '@Url.Action("addLike", "DictionaryPanelContent")' + '/' + id;
                        $.ajax({
                            type: 'POST',
                            url: url,
                            success: function () {
                                likeCountValue += 1;
                                likeCountElement.textContent = likeCountValue;
                            },
                            error: function () {
                                Toast.fire({
                                    title: 'Error!',
                                    text: 'An error occurred, could not be liked.',
                                    icon: 'error'
                                })
                            }
                        });
                    }
                    else {
                        var url = '@Url.Action("Dislike", "DictionaryPanelContent")' + '/' + id;
                        $.ajax({
                            type: 'POST',
                            url: url,
                            success: function () {
                                likeCountValue -= 1;
                                likeCountElement.textContent = likeCountValue;
                            },
                            error: function () {
                                Toast.fire({
                                    title: 'Error!',
                                    text: 'An error occurred, could not be disliked.',
                                    icon: 'error'
                                })
                            }
                        });
                    }
                });

            });
        });
    </script>

    <script>
        function hideDiv() {
            $('#notContent-div').hide();
        }
    </script>

    <script>
        $(document).ready(function () {
            var copyButtons = document.querySelectorAll(".copy-button");

            copyButtons.forEach(function (button) {
                button.addEventListener("click", function () {
                    var entryLinkInput = this.parentNode.querySelector(".entry-link");
                    var entryLink = entryLinkInput.value;

                    copyToClipboard(entryLink);

                    const Toast = Swal.mixin({
                        toast: true,
                        position: 'top-end',
                        showConfirmButton: false,
                        timer: 3000,
                        timerProgressBar: true,
                        didOpen: (toast) => {
                            toast.addEventListener('mouseenter', Swal.stopTimer)
                            toast.addEventListener('mouseleave', Swal.resumeTimer)
                        }
                    })

                    Toast.fire({
                        icon: 'success',
                        title: 'Content link copied.'
                    })
                });
            });

            function copyToClipboard(text) {
                var tempInput = document.createElement("input");
                tempInput.value = text;
                document.body.appendChild(tempInput);
                tempInput.select();
                document.execCommand("copy");
                document.body.removeChild(tempInput);
            }
        });
    </script>
}