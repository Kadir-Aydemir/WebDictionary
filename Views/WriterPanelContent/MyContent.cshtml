@using System.Text.RegularExpressions;
@using DataAccessLayer.EntityFramework
@using BusinessLayer.Concrete
@using EntityLayer.Concrete
@model List<Content>
@{
    ViewBag.Title = "MyContent";
    Layout = "~/Views/Shared/_WriterLayout.cshtml";

    LikeManager lm = new LikeManager(new EfLikeDal());
}

<style>
    @@import url('https://fonts.googleapis.com/css2?family=Kanit&display=swap');

    table {
        font-family: 'Kanit', sans-serif;
    }

    .modal-content {
        width: 400px;
        font-family: 'Kanit', sans-serif;
        background-color: #181A1F;
        color: #9FA0A2;
        border-radius: 30px;
    }

    .modal-header {
        background-color: #181A1F;
        color: #9FA0A2;
        border: none;
    }

    .modal-body {
        background-color: #181A1F;
        color: #9FA0A2;
        border: none;
    }

    @@media (max-width: 479.98px) {
        .modal-content {
            width: 360px;
        }
    }

    .form-control.form-control-sm {
        color: #9FA0A2;
        border: 2px solid #0000;
        border-radius: 6px;
        background: linear-gradient(#1d1f24,#1d1f24) padding-box, linear-gradient(to left,#572ADE,#12A77F) border-box;
        margin-right: 16px;
    }

        .form-control.form-control-sm:hover {
            background: linear-gradient(#181A1F,#181A1F) padding-box, linear-gradient(to left,#12A77F,#12A77F) border-box;
        }
</style>

<div class="content-header">
    <div class="container-fluid">
        <div class="row mb-0">
            <div class="col-sm-6">
                <ol class="breadcrumb float-sm-left">
                    <li style="margin-top:5px"><i style="font-size:25px;" class="fas fa-paint-brush"></i></li>
                    <li style="margin-left:10px"><h1 style="font-family: 'Kanit', sans-serif;" class="m-0"> My Writings</h1></li>
                </ol>
            </div>
            <div class="col-sm-6">
                <ol class="breadcrumb float-sm-right">
                    <li class="breadcrumb-item active">WebDictionary v1</li>
                </ol>
            </div><!-- /.col -->
        </div><!-- /.row -->
    </div><!-- /.container-fluid -->
</div>

<div class="row">
    <section class="col-lg-12">
        <!-- Custom tabs (Charts with tabs)-->
        <div class="card" style="background-color: #181A1F; color: #9FA0A2; border-radius: 40px;">
            <div class="card-header">
            </div><!-- /.card-header -->
            <div class="card-body">
                <div id="example1_wrapper" class="dataTables_wrapper dt-bootstrap4">
                    <div class="row">
                        <div class="col-sm-12 col-md-6"></div>
                        <div class="col-sm-12 col-md-6"></div>
                    </div>
                    <div class="row">
                        <div class="col-sm-12 tab-pane" id="timeline">
                            <table id="example1" class="table table-borderless dataTable dtr-inline projects" role="alertdialog" aria-describedby="example2_info">
                                <thead>
                                    <tr role="row">
                                        <th style="" class="sorting_asc" tabindex="0" aria-controls="example2" rowspan="1" colspan="1" aria-label="Contents: activate to sort column descending" aria-sort="ascending">Contents</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var item in Model)
                                    {
                                        @functions {
                                            private string ModifyColumnValue(string value)
                                            {
                                                var patternweblink = @"\[(.*?)\]";
                                                var modifiedValue = Regex.Replace(value, patternweblink, match =>
                                                {
                                                    var matchedText = match.Value;
                                                    var modifiedText = $"<a class=\"weblink\" href=\"{matchedText}\" style=\"color: #12A77F;\" target=\"_blank\">{matchedText}  <i class=\"fas fa-sign-out-alt\"></i></a>";
                                                    return modifiedText;
                                                });
                                                modifiedValue = modifiedValue.Replace("[", "").Replace("]", "");

                                                var patternheadinglink = @"\`(.*?)\`";
                                                modifiedValue = Regex.Replace(modifiedValue, patternheadinglink, match =>
                                                {
                                                    var matchedText = match.Value;
                                                    var modifiedText = $"<a href=\"/DictionaryPanelContent/SearchHeading?HeadingName={matchedText}\" style=\"color: #572ADE;\" target=\"_blank\">{matchedText}</a>";
                                                    return modifiedText;
                                                });
                                                modifiedValue = modifiedValue.Replace("`", "");

                                                return modifiedValue;
                                            }
                                        }
                                        var modifiedValue = ModifyColumnValue(item.ContentCaption);

                                        var list = lm.GetListByContentID(item.ContentID);

                                        <tr role="row" class="odd">
                                            <td style="margin: 0px; padding: 0px; position: relative;" class="project-actions">
                                                <div class="timeline timeline-inverse" style="margin:0px;padding:0px;">
                                                    <div class="time-label">
                                                        <span class="bg-indigo">
                                                            @(((DateTime)item.ContentDate).ToString("dd MMM yyyy"))
                                                        </span>
                                                    </div>
                                                    <!-- /.timeline-label -->
                                                    <!-- timeline item -->
                                                    <div style="margin: 0px; padding: 0px;">
                                                        @*<i class="fas fa-paint-brush bg-success"></i>*@
                                                        @if (item.Writer.WriterImage != null)
                                                        {
                                                            <img style="height: 40px; width: 40px; margin-left: 12px;" alt="Avatar" class="table-avatar" src="@Url.Action("GetImage", "Writer", new { id = item.WriterID })">
                                                        }
                                                        @if (item.Writer.WriterImage == null)
                                                        {
                                                            <img style="height: 40px; width: 40px; margin-left: 12px;" alt="Avatar" class="table-avatar" src="~/Resources/defaultperson.png">
                                                        }


                                                        <div class="timeline-item" style="background-color: #1d1f24; border-color: #181A1F; color: #d0d2d6; top: -30px; margin-left: 70px; border-radius: 20px; padding: 10px;">
                                                            <div class="time" style="text-align: right;">
                                                                <a id="likeList" data-id="@item.ContentID" style="cursor: pointer;">
                                                                    <small class="like-count">@list.Count <i style="color: #DC235D; padding-inline: 3px" class="fas fa-heart"></i></small>
                                                                </a>
                                                            </div>

                                                            <h3 class="timeline-header" style="border-color: #1d1f24; color: #d0d2d6 "><i class="fas fa-tag"></i> <a target="_blank" style="color: #12A77F;" href="/DictionaryPanelContent/Index/@item.HeadingID">@item.Heading.HeadingName</a></h3>

                                                            <div class="timeline-body">
                                                                @Html.Raw(modifiedValue)
                                                            </div>
                                                            <div class="timeline-footer" style="padding:0">
                                                                <div class="row" style="height:30px;">
                                                                    <div class="col-6" style="display: flex; justify-content: left; height: 30px;">
                                                                        <div style="display:flex;justify-content:center;">
                                                                            <small style="margin-top:5px;padding-inline:10px;"><i class="far fa-clock"></i> @(((DateTime)item.ContentDate).ToString("HH:mm"))</small>
                                                                        </div>
                                                                    </div>
                                                                    <div class="col-6" style="display: flex; justify-content: right; height: 30px;">
                                                                        @if (item.ContentRemove == false)
                                                                        {
                                                                            <a href="/WriterPanelContent/updateContent/@item.ContentID" class="btn btn-dark btn-sm" style="color: white; background-color: #572ADE; border-color: #572ADE; border-radius:12px;margin-right:6px;">
                                                                                <i class="fas fa-edit"></i> Edit
                                                                            </a>
                                                                            <button class="btn btn-warning btn-sm delete-content" style="border-radius: 12px;" data-id=@item.ContentID>
                                                                                <i class="fas fa-exclamation-circle"></i> Remove
                                                                            </button>
                                                                        }
                                                                        else
                                                                        {
                                                                            <button class="btn btn-success btn-sm active-content" style="border-radius: 12px;" data-id=@item.ContentID>
                                                                                <i class="fas fa-recycle"></i>Active
                                                                            </button>
                                                                        }
                                                                    </div>
                                                                </div>
                                                            </div>
                                                        </div>
                                                    </div>
                                                    <!-- END timeline item -->
                                                </div>
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>

            </div>
        </div>
    </section>
</div>

<button type="button" style="display:none" data-toggle="modal" data-target=".modal" id="btn_modallike" name="btn_modallike">
</button>

<div class="modal fade scrollbar" id="style-7" style="overflow-y: auto; overflow-x: hidden;" tabindex="-1" role="dialog" aria-labelledby="likesModalLabel">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="likesModalLabel">Likes</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span style="color: #9FA0A2;" aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">

            </div>
        </div>
    </div>
</div>

@section scripts {
    <script>
        $(document).ready(function () {
            $(document).on('click', '#likeList', function () {
                var id = $(this).data('id');
                var url = '@Url.Action("GetLikes", "DictionaryPanelContent")' + '/' + id;

                $.ajax({
                    type: 'GET',
                    url: url,
                    success: function (result) {
                        $('.modal .modal-body').html(result);
                        $("#btn_modallike").click();
                    },
                    error: function (xhr, status, error) {
                        Swal.fire({
                            title: status + '!',
                            text: 'An error occurred, like list could not be show.' + error,
                            icon: 'error'
                        });
                    }
                });
            });
        });
    </script>
    <script>
        $(document).ready(function () {
            $('.modal').on('hidden.bs.modal', function () {
                $(this).removeData('bs.modal');
            });
        });

        function showModal() {
            $('.modal').modal('show');
        }
    </script>

    <script>
        $(document).on('click', '.delete-content', function () {
            var id = $(this).data('id');
            var url = '@Url.Action("Delete", "WriterPanelContent")' + '/' + id;

            Swal.fire({
                title: 'Warning!',
                text: 'Are you sure you want to remove this content?',
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#d33',
                cancelButtonColor: '#3085d6',
                confirmButtonText: 'Yes, remove!',
                cancelButtonText: 'Cancel'
            }).then((result) => {
                if (result.isConfirmed) {
                    $.ajax({
                        type: 'POST',
                        url: url,
                        success: function() {
                            Swal.fire({
                                title: 'Removed!',
                                text: 'Content was removed successfully.',
                                icon: 'success'
                            }).then((result) => {
                                location.reload();
                            });
                        },
                        error: function() {
                            Swal.fire({
                                title: 'Error!',
                                text: 'An error occurred, the content could not be removed.',
                                icon: 'error'
                            });
                        }
                    });
                }
            });
        });
    </script>

    <script>
        $(document).on('click', '.active-content', function () {
            var id = $(this).data('id');
            var url = '@Url.Action("Delete", "WriterPanelContent")' + '/' + id;

            $.ajax({
                type: 'POST',
                url: url,
                success: function () {
                    Swal.fire({
                        title: 'Actived!',
                        text: 'Content was actived successfully.',
                        icon: 'success'
                    }).then((result) => {
                        location.reload();
                    });
                },
                error: function () {
                    Swal.fire({
                        title: 'Error!',
                        text: 'An error occurred, the content could not be actived.',
                        icon: 'error'
                    });
                }
            });
        });
    </script>

    <script>
        $(document).ready(function () {
            $('#Writing').addClass('active');
        });
    </script>
}



