@model EntityLayer.Concrete.Heading
@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

<style>
    @@import url('https://fonts.googleapis.com/css2?family=Kanit&display=swap');

    table {
        font-family: 'Kanit', sans-serif;
    }

</style>

@Html.Action("HeadingPartial", "Heading")

<!-- INSERT MODAL -->
<div class="modal fade" id="insertmodal">
    <div class="modal-dialog">
        <div class="modal-content" style="color: #383A3E ">
            <div class="modal-header">
                <h4 class="modal-title">
                    <i class="fas fa-plus-circle">
                    </i> Add New Heading
                </h4>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                @using (Html.BeginForm("Index", "Heading", FormMethod.Post, new { enctype = "multipart/form-data" }))
                {
                    <div class="form-group">
                        @Html.Label("Heading Name")
                        @Html.TextBoxFor(x => x.HeadingName, new { @class = "form-control", @maxlength = "50", @id = "hname" })
                        <p id="charCount">0/50</p>
                        @Html.ValidationMessageFor(x => x.HeadingName, "", new { @style = "color:orange" })
                        <br />
                        @Html.Label("Category")
                        @Html.DropDownListFor(x => x.CategoryID, (List<SelectListItem>)ViewBag.ctglist, new { @class = "form-control" })
                        @Html.ValidationMessageFor(x => x.CategoryID, "", new { @style = "color:orange" })
                        <br />
                        @Html.Label("Writer")
                        @Html.DropDownListFor(x => x.WriterID, (List<SelectListItem>)ViewBag.wrtlist, new { @class = "form-control" })
                        @Html.ValidationMessageFor(x => x.WriterID, "", new { @style = "color:orange" })
                        <br />
                        <img src="~/Resources/noimages.png" alt="" style="max-width: 190px; max-height: 100px;" id="ImagePathIn">
                        <br />
                        <br />
                        <div class="input-group">
                            <div class="custom-file">
                                <input type="file" class="custom-file-input" id="exampleInputFile" accept="image/.jpg,.jpeg,.png" name="imageFile" onchange="readImageIn(this);">
                                <label class="custom-file-label" for="exampleInputFile">Choose file</label>
                            </div>
                        </div>
                        <div class="text-right">
                            <button type="submit" class="btn btn-success" name="btnInsert" value="insert" style="margin-top: 10px; background-color: #6F2CF3; border-color: #6F2CF3 ">Add Heading</button>
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>
</div>
<!-- /INSERT MODAL -->
<!-- /UPDATE MODAL -->
<button type="button" style="display:none" data-toggle="modal" data-target="#updatemodal" id="btn_modalupdate" name="btn_modalupdate">
</button>

<div class="modal fade" id="updatemodal">
    <div class="modal-dialog">
        <div class="modal-content" style="color: #383A3E ">
            <div class="modal-header">
                <h4 class="modal-title">
                    <i class="fas fa-edit">
                    </i> Edit Heading
                </h4>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                @using (Html.BeginForm("Index", "Heading", FormMethod.Post, new { enctype = "multipart/form-data" }))
                {
                    <div class="form-group">
                        @Html.Label("Heading Name")
                        @Html.TextBoxFor(x => x.HeadingName, new { @class = "form-control", @id = "name", @maxlength = "50" })
                        <p id="charCount2">0/50</p>
                        @Html.ValidationMessageFor(x => x.HeadingName, "", new { @style = "color:orange" })
                        <br />
                        @Html.Label("Category")
                        @Html.DropDownListFor(x => x.CategoryID, (List<SelectListItem>)ViewBag.ctglist, new { @class = "form-control", @id = "category" })
                        @Html.ValidationMessageFor(x => x.CategoryID, "", new { @style = "color:orange" })
                        <br />
                        @Html.Label("Writer")
                        @Html.DropDownListFor(x => x.WriterID, (List<SelectListItem>)ViewBag.wrtlist, new { @class = "form-control", @id = "writer" })
                        @Html.ValidationMessageFor(x => x.WriterID, "", new { @style = "color:orange" })
                        <br />
                        <img src="" alt="" style="max-width: 190px; max-height: 100px;" id="ImagePathUp">
                        <br />
                        <br />
                        <div class="input-group">
                            <div class="custom-file">
                                <input type="file" class="custom-file-input" id="exampleInputFile2" accept="image/.jpg,.jpeg,.png" name="imageFile" onchange="readImageUp(this);">
                                <label class="custom-file-label" for="exampleInputFile2">Choose file</label>
                            </div>
                        </div>
                        @Html.HiddenFor(x => x.HeadingID, new { @id = "headingid" })
                        <div class="text-right">
                            <button type="submit" class="btn btn-success" style="margin-top: 10px; background-color: #6F2CF3; border-color: #6F2CF3 " name="btnUpdate" value="update">Save Changes</button>
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>
</div>
<!-- /UPDATE MODAL -->

@section scripts {
    <!-- bs-custom-file-input -->
    <script src="~/AdminLTE-3.0.4/plugins/bs-custom-file-input/bs-custom-file-input.min.js"></script>
    <script type="text/javascript">
        $(document).ready(function () {
            bsCustomFileInput.init();
        });
    </script>

    <script>
        function readImageUp(input) {
            if (input.files && input.files[0]) {
                var reader = new FileReader();

                reader.onload = function (e) {
                    $('#ImagePathUp').attr('src', e.target.result);
                    $('#ImagePathUp').show();
                }

                reader.readAsDataURL(input.files[0]);
            }
        }
    </script>
    <script>
        function readImageIn(input) {
            if (input.files && input.files[0]) {
                var reader = new FileReader();

                reader.onload = function (e) {
                    $('#ImagePathIn').attr('src', e.target.result);
                    $('#ImagePathIn').show();
                }

                reader.readAsDataURL(input.files[0]);
            }
        }
    </script>
    <script>
        $(document).ready(function () {
            var textarea = $("#hname");
            var charCount = $("#charCount");

            textarea.on("input", function () {
                var textLength = textarea.val().length;
                charCount.text(textLength + "/50");
            });
        });
    </script>
    <script>
        $(document).ready(function () {
            var textarea2 = $("#name");
            var charCount2 = $("#charCount2");

            textarea2.on("input", function () {
                var textLength = textarea2.val().length;
                charCount2.text(textLength + "/200");
            });
        });
    </script>
    <script>
        $(document).on('click', '.remove-heading', function () {
            var id = $(this).data('id');
            var url = '@Url.Action("Remove", "Heading")' + '/' + id;

            Swal.fire({
                title: 'Warning!',
                text: 'Are you sure you want to remove this heading?',
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#d33',
                cancelButtonColor: '#3085d6',
                confirmButtonText: 'Yes, remove!',
                cancelButtonText: 'Cancel'
            }).then((result) => {
                if (result.isConfirmed) {
                    $.ajax({
                        type: 'POST',
                        url: url,
                        success: function() {
                            Swal.fire({
                                title: 'Removed!',
                                text: 'Heading was removed successfully.',
                                icon: 'success'
                            }).then((result) => {
                                location.reload();
                            });
                        },
                        error: function() {
                            Swal.fire({
                                title: 'Error!',
                                text: 'An error occurred, the heading could not be removed.',
                                icon: 'error'
                            });
                        }
                    });
                }
            });
        });
    </script>
    <script>
        $(document).on('click', '.delete-heading', function () {
            var id = $(this).data('id');
            var url = '@Url.Action("Delete", "Heading")' + '/' + id;

            Swal.fire({
                title: 'Warning!',
                text: 'Are you sure you want to delete this heading? (If you delete this heading, the contents of the heading will also be deleted.)',
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#d33',
                cancelButtonColor: '#3085d6',
                confirmButtonText: 'Yes, delete!',
                cancelButtonText: 'Cancel'
            }).then((result) => {
                if (result.isConfirmed) {

                    (async () => {

                        const { value: text } = await Swal.fire({
                            input: 'textarea',
                            inputLabel: 'Reason For Deletion (Required)',
                            inputPlaceholder: 'Type your reason here...',
                            inputAttributes: {
                                'aria-label': 'Type your reason here'
                            },
                            showCancelButton: true,
                            confirmButtonColor: '#d33',
                            cancelButtonColor: '#3085d6',
                            confirmButtonText: 'Send and delete!',
                            inputValidator: (value) => {
                                if (!value) {
                                    return 'You need to write something!'
                                }
                            }
                        })

                        if (text) {
                            $.ajax({
                                type: 'POST',
                                url: url,
                                data: { reason: text },
                                success: function () {
                                    Swal.fire({
                                        title: 'Deleted!',
                                        text: 'Heading was delete successfully.',
                                        icon: 'success'
                                    }).then((result) => {
                                        location.reload();
                                    });
                                },
                                error: function () {
                                    Swal.fire({
                                        title: 'Error!',
                                        text: 'An error occurred, the heading could not be deleted.',
                                        icon: 'error'
                                    });
                                }
                            });
                        }
                    })()
                }
            });
        });
    </script>
    <!-- INSERT MODAL -->
    <script>
        $(document).ready(function () {
            $('#insertmodal').on('hidden.bs.modal', function () {
                $(this).removeData('bs.modal');
            });
        });

        function showModal() {

            $('#insertmodal').load('/Heading/Index');
            $('#insertmodal').modal('show');
        }
    </script>
    @if (ViewBag.alert == "true")
    {
        <script>
            $(document).ready(function () {
                $("#btn_modal").click();
            });
        </script>
    }
    @if (ViewBag.insertresult == "true")
    {
        <script>
            $(document).ready(function () {
                Swal.fire({
                    title: 'Added!',
                    text: 'The Heading was added successfully.',
                    icon: 'success'
                }).then(() => {
                    location.href = "/Heading/Index";
                });
            });
        </script>
    }
    <!-- /INSERT MODAL -->
    <!-- UPDATE MODAL -->
    <script>
        $(document).ready(function () {
            $('#updatemodal').on('hidden.bs.modal', function () {
                $(this).removeData('bs.modal');
            });
        });

        function showModal() {
            $('#updatemodal').load('/Heading/Index');
            $('#updatemodal').modal('show');
        }
    </script>

    <script>
        $(document).on('click', '.update-heading', function () {
             var id = $(this).data('id');
                var url = '@Url.Action("updateHeading", "Heading")' + '/' + id;
                var imageurl='@Url.Action("GetImage", "Heading")' + '/' + id;
                $.ajax({
                    type: 'GET',
                    url: url,
                    dataType: 'json',
                    success: function (data) {
                        $('#updatemodal').find('#headingid').val(data[0]);
                        $('#updatemodal').find('#name').val(data[1]);
                        $('#updatemodal').find('#category').val(data[2]);
                        $('#updatemodal').find('#writer').val(data[3]);
                        $('#updatemodal').find('#ImagePathUp').attr('src', imageurl);
                         //diğer inputlar
                        $("#btn_modalupdate").click();
                    },
                    error: function (xhr, status, error) {
                        Swal.fire({
                            title: status + '!',
                            text: 'An error occurred, the Heading could not be show.' + error,
                            icon: 'error'
                        });
                    }
                });
        });
    </script>

    @if (ViewBag.updatealert == "true")
    {
        <script>
            $(document).ready(function () {
                $("#btn_modalupdate").click();
            });
        </script>
    }

    @if (ViewBag.updateresult == "true")
    {
        <script>
            $(document).ready(function () {
                Swal.fire({
                    title: 'Updated!',
                    text: 'The Heading was updated successfully.',
                    icon: 'success'
                }).then(() => {
                    location.href = "/Heading/Index";
                });
            });
        </script>
    }
    <!-- /UPDATE MODAL -->
    <script>
        $(document).ready(function () {
            $('#Heading').addClass('active');
        });
    </script>
}


